package net.studykeeper.time;

import java.util.concurrent.TimeUnit;

import net.studykeeper.StudyTime.Duration;
import net.studykeeper.StudyTime.Duration.Builder;

public class Duration {
	private final long startTimeInMillis;
	private final long stopTimeInMillis;

	public Duration(Builder builder) {
		this.startTimeInMillis = builder.startTimeInMillis;
		this.stopTimeInMillis = System.currentTimeMillis();
	}
	
	public Duration(long startTimeInMillis, long stopTimeInMillis) {
		this.startTimeInMillis = startTimeInMillis;
		this.stopTimeInMillis = stopTimeInMillis;
	}

	public long getStartTimeInMillis() {
		return startTimeInMillis;
	}

	public long getStopTimeInMillis() {
		return stopTimeInMillis;
	}

	public long duration() {
		return stopTimeInMillis - startTimeInMillis;
	}

	/**
	 * Convert duration to {MINUTES}:{SECONDS}
	 * */
	public String durationString(long duration) {
		long durationInMinutes = TimeUnit.MILLISECONDS.toMinutes(duration);
		long durationInSeconds = TimeUnit.MILLISECONDS.toSeconds(duration - TimeUnit.MINUTES.toMillis(durationInMinutes));
		return leftFillZero(durationInMinutes) + ":" + leftFillZero(durationInSeconds);
	}

	private String leftFillZero(long duration) {
		if ( duration < 10 ) {
			return "0" + duration;
		}
		return String.valueOf(duration);
	}

	static class Builder {
		private long startTimeInMillis;
		
		public Builder startTimeInMillis(long startTimeInMillis) {
			this.startTimeInMillis = startTimeInMillis;
			return this;
		}

		public Duration build() {
			return new Duration(this);
		}
	}
	
}
